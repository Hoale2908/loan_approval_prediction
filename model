{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0f0023cb",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:44.767209Z",
     "iopub.status.busy": "2024-10-02T04:03:44.766304Z",
     "iopub.status.idle": "2024-10-02T04:03:46.946783Z",
     "shell.execute_reply": "2024-10-02T04:03:46.945770Z"
    },
    "papermill": {
     "duration": 2.188337,
     "end_time": "2024-10-02T04:03:46.949512",
     "exception": false,
     "start_time": "2024-10-02T04:03:44.761175",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s4e10/sample_submission.csv\n",
      "/kaggle/input/playground-series-s4e10/train.csv\n",
      "/kaggle/input/playground-series-s4e10/test.csv\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd \n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1680e52e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:46.961691Z",
     "iopub.status.busy": "2024-10-02T04:03:46.960574Z",
     "iopub.status.idle": "2024-10-02T04:03:47.148884Z",
     "shell.execute_reply": "2024-10-02T04:03:47.147435Z"
    },
    "papermill": {
     "duration": 0.196817,
     "end_time": "2024-10-02T04:03:47.151348",
     "exception": false,
     "start_time": "2024-10-02T04:03:46.954531",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 58645 entries, 0 to 58644\n",
      "Data columns (total 13 columns):\n",
      " #   Column                      Non-Null Count  Dtype  \n",
      "---  ------                      --------------  -----  \n",
      " 0   id                          58645 non-null  int64  \n",
      " 1   person_age                  58645 non-null  int64  \n",
      " 2   person_income               58645 non-null  int64  \n",
      " 3   person_home_ownership       58645 non-null  object \n",
      " 4   person_emp_length           58645 non-null  float64\n",
      " 5   loan_intent                 58645 non-null  object \n",
      " 6   loan_grade                  58645 non-null  object \n",
      " 7   loan_amnt                   58645 non-null  int64  \n",
      " 8   loan_int_rate               58645 non-null  float64\n",
      " 9   loan_percent_income         58645 non-null  float64\n",
      " 10  cb_person_default_on_file   58645 non-null  object \n",
      " 11  cb_person_cred_hist_length  58645 non-null  int64  \n",
      " 12  loan_status                 58645 non-null  int64  \n",
      "dtypes: float64(3), int64(6), object(4)\n",
      "memory usage: 5.8+ MB\n"
     ]
    }
   ],
   "source": [
    "train = pd.read_csv('/kaggle/input/playground-series-s4e10/train.csv')\n",
    "train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6dfd2fc8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:47.160256Z",
     "iopub.status.busy": "2024-10-02T04:03:47.159303Z",
     "iopub.status.idle": "2024-10-02T04:03:47.220549Z",
     "shell.execute_reply": "2024-10-02T04:03:47.219443Z"
    },
    "papermill": {
     "duration": 0.068155,
     "end_time": "2024-10-02T04:03:47.222903",
     "exception": false,
     "start_time": "2024-10-02T04:03:47.154748",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <td>58645.0</td>\n",
       "      <td>29322.000000</td>\n",
       "      <td>16929.497605</td>\n",
       "      <td>0.00</td>\n",
       "      <td>14661.00</td>\n",
       "      <td>29322.00</td>\n",
       "      <td>43983.00</td>\n",
       "      <td>58644.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>person_age</th>\n",
       "      <td>58645.0</td>\n",
       "      <td>27.550857</td>\n",
       "      <td>6.033216</td>\n",
       "      <td>20.00</td>\n",
       "      <td>23.00</td>\n",
       "      <td>26.00</td>\n",
       "      <td>30.00</td>\n",
       "      <td>123.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>person_income</th>\n",
       "      <td>58645.0</td>\n",
       "      <td>64046.172871</td>\n",
       "      <td>37931.106978</td>\n",
       "      <td>4200.00</td>\n",
       "      <td>42000.00</td>\n",
       "      <td>58000.00</td>\n",
       "      <td>75600.00</td>\n",
       "      <td>1900000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>person_emp_length</th>\n",
       "      <td>58645.0</td>\n",
       "      <td>4.701015</td>\n",
       "      <td>3.959784</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>7.00</td>\n",
       "      <td>123.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>loan_amnt</th>\n",
       "      <td>58645.0</td>\n",
       "      <td>9217.556518</td>\n",
       "      <td>5563.807384</td>\n",
       "      <td>500.00</td>\n",
       "      <td>5000.00</td>\n",
       "      <td>8000.00</td>\n",
       "      <td>12000.00</td>\n",
       "      <td>35000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>loan_int_rate</th>\n",
       "      <td>58645.0</td>\n",
       "      <td>10.677874</td>\n",
       "      <td>3.034697</td>\n",
       "      <td>5.42</td>\n",
       "      <td>7.88</td>\n",
       "      <td>10.75</td>\n",
       "      <td>12.99</td>\n",
       "      <td>23.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>loan_percent_income</th>\n",
       "      <td>58645.0</td>\n",
       "      <td>0.159238</td>\n",
       "      <td>0.091692</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.09</td>\n",
       "      <td>0.14</td>\n",
       "      <td>0.21</td>\n",
       "      <td>0.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cb_person_cred_hist_length</th>\n",
       "      <td>58645.0</td>\n",
       "      <td>5.813556</td>\n",
       "      <td>4.029196</td>\n",
       "      <td>2.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>8.00</td>\n",
       "      <td>30.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>loan_status</th>\n",
       "      <td>58645.0</td>\n",
       "      <td>0.142382</td>\n",
       "      <td>0.349445</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              count          mean           std      min  \\\n",
       "id                          58645.0  29322.000000  16929.497605     0.00   \n",
       "person_age                  58645.0     27.550857      6.033216    20.00   \n",
       "person_income               58645.0  64046.172871  37931.106978  4200.00   \n",
       "person_emp_length           58645.0      4.701015      3.959784     0.00   \n",
       "loan_amnt                   58645.0   9217.556518   5563.807384   500.00   \n",
       "loan_int_rate               58645.0     10.677874      3.034697     5.42   \n",
       "loan_percent_income         58645.0      0.159238      0.091692     0.00   \n",
       "cb_person_cred_hist_length  58645.0      5.813556      4.029196     2.00   \n",
       "loan_status                 58645.0      0.142382      0.349445     0.00   \n",
       "\n",
       "                                 25%       50%       75%         max  \n",
       "id                          14661.00  29322.00  43983.00    58644.00  \n",
       "person_age                     23.00     26.00     30.00      123.00  \n",
       "person_income               42000.00  58000.00  75600.00  1900000.00  \n",
       "person_emp_length               2.00      4.00      7.00      123.00  \n",
       "loan_amnt                    5000.00   8000.00  12000.00    35000.00  \n",
       "loan_int_rate                   7.88     10.75     12.99       23.22  \n",
       "loan_percent_income             0.09      0.14      0.21        0.83  \n",
       "cb_person_cred_hist_length      3.00      4.00      8.00       30.00  \n",
       "loan_status                     0.00      0.00      0.00        1.00  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6c7ceb73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:47.232320Z",
     "iopub.status.busy": "2024-10-02T04:03:47.231576Z",
     "iopub.status.idle": "2024-10-02T04:03:47.250664Z",
     "shell.execute_reply": "2024-10-02T04:03:47.249539Z"
    },
    "papermill": {
     "duration": 0.026423,
     "end_time": "2024-10-02T04:03:47.253022",
     "exception": false,
     "start_time": "2024-10-02T04:03:47.226599",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>person_age</th>\n",
       "      <th>person_income</th>\n",
       "      <th>person_home_ownership</th>\n",
       "      <th>person_emp_length</th>\n",
       "      <th>loan_intent</th>\n",
       "      <th>loan_grade</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>loan_int_rate</th>\n",
       "      <th>loan_percent_income</th>\n",
       "      <th>cb_person_default_on_file</th>\n",
       "      <th>cb_person_cred_hist_length</th>\n",
       "      <th>loan_status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>47336</th>\n",
       "      <td>47336</td>\n",
       "      <td>123</td>\n",
       "      <td>36000</td>\n",
       "      <td>MORTGAGE</td>\n",
       "      <td>7.0</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>B</td>\n",
       "      <td>6700</td>\n",
       "      <td>10.75</td>\n",
       "      <td>0.18</td>\n",
       "      <td>N</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          id  person_age  person_income person_home_ownership  \\\n",
       "47336  47336         123          36000              MORTGAGE   \n",
       "\n",
       "       person_emp_length loan_intent loan_grade  loan_amnt  loan_int_rate  \\\n",
       "47336                7.0    PERSONAL          B       6700          10.75   \n",
       "\n",
       "       loan_percent_income cb_person_default_on_file  \\\n",
       "47336                 0.18                         N   \n",
       "\n",
       "       cb_person_cred_hist_length  loan_status  \n",
       "47336                           4            0  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[train['person_age']>90]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7accf782",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:47.263080Z",
     "iopub.status.busy": "2024-10-02T04:03:47.262104Z",
     "iopub.status.idle": "2024-10-02T04:03:47.281734Z",
     "shell.execute_reply": "2024-10-02T04:03:47.280534Z"
    },
    "papermill": {
     "duration": 0.028119,
     "end_time": "2024-10-02T04:03:47.285006",
     "exception": false,
     "start_time": "2024-10-02T04:03:47.256887",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>person_age</th>\n",
       "      <th>person_income</th>\n",
       "      <th>person_home_ownership</th>\n",
       "      <th>person_emp_length</th>\n",
       "      <th>loan_intent</th>\n",
       "      <th>loan_grade</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>loan_int_rate</th>\n",
       "      <th>loan_percent_income</th>\n",
       "      <th>cb_person_default_on_file</th>\n",
       "      <th>cb_person_cred_hist_length</th>\n",
       "      <th>loan_status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>41079</th>\n",
       "      <td>41079</td>\n",
       "      <td>28</td>\n",
       "      <td>60350</td>\n",
       "      <td>MORTGAGE</td>\n",
       "      <td>123.0</td>\n",
       "      <td>MEDICAL</td>\n",
       "      <td>D</td>\n",
       "      <td>25000</td>\n",
       "      <td>15.95</td>\n",
       "      <td>0.35</td>\n",
       "      <td>Y</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49252</th>\n",
       "      <td>49252</td>\n",
       "      <td>21</td>\n",
       "      <td>192000</td>\n",
       "      <td>MORTGAGE</td>\n",
       "      <td>123.0</td>\n",
       "      <td>VENTURE</td>\n",
       "      <td>B</td>\n",
       "      <td>20000</td>\n",
       "      <td>11.49</td>\n",
       "      <td>0.10</td>\n",
       "      <td>N</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          id  person_age  person_income person_home_ownership  \\\n",
       "41079  41079          28          60350              MORTGAGE   \n",
       "49252  49252          21         192000              MORTGAGE   \n",
       "\n",
       "       person_emp_length loan_intent loan_grade  loan_amnt  loan_int_rate  \\\n",
       "41079              123.0     MEDICAL          D      25000          15.95   \n",
       "49252              123.0     VENTURE          B      20000          11.49   \n",
       "\n",
       "       loan_percent_income cb_person_default_on_file  \\\n",
       "41079                 0.35                         Y   \n",
       "49252                 0.10                         N   \n",
       "\n",
       "       cb_person_cred_hist_length  loan_status  \n",
       "41079                           6            1  \n",
       "49252                           2            0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[train['person_emp_length']>50]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9f0b50a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:47.299300Z",
     "iopub.status.busy": "2024-10-02T04:03:47.298557Z",
     "iopub.status.idle": "2024-10-02T04:03:47.310880Z",
     "shell.execute_reply": "2024-10-02T04:03:47.309905Z"
    },
    "papermill": {
     "duration": 0.022661,
     "end_time": "2024-10-02T04:03:47.313796",
     "exception": false,
     "start_time": "2024-10-02T04:03:47.291135",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train = train.drop([47336,41079,49252],axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9d8922c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:47.327822Z",
     "iopub.status.busy": "2024-10-02T04:03:47.327018Z",
     "iopub.status.idle": "2024-10-02T04:03:47.336448Z",
     "shell.execute_reply": "2024-10-02T04:03:47.335463Z"
    },
    "papermill": {
     "duration": 0.019334,
     "end_time": "2024-10-02T04:03:47.339231",
     "exception": false,
     "start_time": "2024-10-02T04:03:47.319897",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train['age_emplength'] = train['person_age'] - train['person_emp_length'] # should be positive or at least 18\n",
    "train['age_cred'] = train['person_age'] - train['cb_person_cred_hist_length'] # should be positive or at least 18\n",
    "train['emp_cred'] = train['person_emp_length'] - train['cb_person_cred_hist_length'] # should be positive"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3544c66f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:47.353409Z",
     "iopub.status.busy": "2024-10-02T04:03:47.352446Z",
     "iopub.status.idle": "2024-10-02T04:03:47.581657Z",
     "shell.execute_reply": "2024-10-02T04:03:47.580629Z"
    },
    "papermill": {
     "duration": 0.239196,
     "end_time": "2024-10-02T04:03:47.584534",
     "exception": false,
     "start_time": "2024-10-02T04:03:47.345338",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='age_emplength'>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,2))\n",
    "sns.boxplot(train, x='age_emplength', width=.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4706e9b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:47.599227Z",
     "iopub.status.busy": "2024-10-02T04:03:47.598808Z",
     "iopub.status.idle": "2024-10-02T04:03:47.793016Z",
     "shell.execute_reply": "2024-10-02T04:03:47.792008Z"
    },
    "papermill": {
     "duration": 0.204647,
     "end_time": "2024-10-02T04:03:47.795786",
     "exception": false,
     "start_time": "2024-10-02T04:03:47.591139",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='age_cred'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,2))\n",
    "sns.boxplot(train, x='age_cred', width=.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "172ea346",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-02T04:03:47.811296Z",
     "iopub.status.busy": "2024-10-02T04:03:47.810319Z",
     "iopub.status.idle": "2024-10-02T04:03:47.979293Z",
     "shell.execute_reply": "2024-10-02T04:03:47.978303Z"
    },
    "papermill": {
     "duration": 0.178612,
     "end_time": "2024-10-02T04:03:47.981427",
     "exception": false,
     "start_time": "2024-10-02T04:03:47.802815",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,2))\n",
    "sns.boxplot(train, x='emp_cred', width=.3)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 9709193,
     "sourceId": 84894,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30775,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.157629,
   "end_time": "2024-10-02T04:03:48.506605",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-10-02T04:03:42.348976",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
